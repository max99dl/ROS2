cmake_minimum_required(VERSION 3.8)
project(matrix_determinant_service)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(matrix_interface REQUIRED)

set(dependencies
	rclcpp
	matrix_interface)

add_executable(matrix_resolver_server src/matrix_resolver_server.cpp)
ament_target_dependencies(matrix_resolver_server ${dependencies})

add_executable(matrix_resolver_client src/matrix_resolver_client.cpp)
ament_target_dependencies(matrix_resolver_client ${dependencies})

add_executable(matrix_resolver_subscriber src/matrix_resolver_subscriber.cpp)
ament_target_dependencies(matrix_resolver_subscriber ${dependencies})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()


install(TARGETS
	matrix_resolver_server
	matrix_resolver_client
	matrix_resolver_subscriber
  DESTINATION lib/${PROJECT_NAME})

ament_package()
